// Mocks generated by Mockito 5.4.4 from annotations
// in private_sync/test/sync_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartssh2/dartssh2.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:private_sync/local_directory.dart' as _i10;
import 'package:private_sync/models/remote_directory_listing_model.dart' as _i3;
import 'package:private_sync/models/sync_directory_model.dart' as _i9;
import 'package:private_sync/models/sync_file_model.dart' as _i7;
import 'package:private_sync/remote_directory.dart' as _i8;
import 'package:private_sync/ssh.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSSHClient_0 extends _i1.SmartFake implements _i2.SSHClient {
  _FakeSSHClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSftpClient_1 extends _i1.SmartFake implements _i2.SftpClient {
  _FakeSftpClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteDirectoryListingModel_2 extends _i1.SmartFake
    implements _i3.RemoteDirectoryListingModel {
  _FakeRemoteDirectoryListingModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSftpFileAttrs_3 extends _i1.SmartFake implements _i2.SftpFileAttrs {
  _FakeSftpFileAttrs_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSsh_4 extends _i1.SmartFake implements _i4.Ssh {
  _FakeSsh_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_5 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Ssh].
///
/// See the documentation for Mockito's code generation for more information.
class MockSsh extends _i1.Mock implements _i4.Ssh {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#host),
        ),
      ) as String);

  @override
  set host(String? _host) => super.noSuchMethod(
        Invocation.setter(
          #host,
          _host,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#username),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#username),
        ),
      ) as String);

  @override
  set username(String? _username) => super.noSuchMethod(
        Invocation.setter(
          #username,
          _username,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get port => (super.noSuchMethod(
        Invocation.getter(#port),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set port(int? _port) => super.noSuchMethod(
        Invocation.setter(
          #port,
          _port,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SSHClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeSSHClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeSSHClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.SSHClient);

  @override
  set client(_i2.SSHClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SftpClient get sftpClient => (super.noSuchMethod(
        Invocation.getter(#sftpClient),
        returnValue: _FakeSftpClient_1(
          this,
          Invocation.getter(#sftpClient),
        ),
        returnValueForMissingStub: _FakeSftpClient_1(
          this,
          Invocation.getter(#sftpClient),
        ),
      ) as _i2.SftpClient);

  @override
  set sftpClient(_i2.SftpClient? _sftpClient) => super.noSuchMethod(
        Invocation.setter(
          #sftpClient,
          _sftpClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.RemoteDirectoryListingModel> listDirectory(
    String? path, {
    int? depth = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listDirectory,
          [path],
          {#depth: depth},
        ),
        returnValue: _i6.Future<_i3.RemoteDirectoryListingModel>.value(
            _FakeRemoteDirectoryListingModel_2(
          this,
          Invocation.method(
            #listDirectory,
            [path],
            {#depth: depth},
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.RemoteDirectoryListingModel>.value(
                _FakeRemoteDirectoryListingModel_2(
          this,
          Invocation.method(
            #listDirectory,
            [path],
            {#depth: depth},
          ),
        )),
      ) as _i6.Future<_i3.RemoteDirectoryListingModel>);

  @override
  _i6.Future<void> uploadFile(
    _i7.SyncFileModel? localFile,
    String? remotePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            localFile,
            remotePath,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> downloadFile(
    _i7.SyncFileModel? remoteFile,
    String? localPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [
            remoteFile,
            localPath,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.SftpFileAttrs> statFile(String? path) => (super.noSuchMethod(
        Invocation.method(
          #statFile,
          [path],
        ),
        returnValue: _i6.Future<_i2.SftpFileAttrs>.value(_FakeSftpFileAttrs_3(
          this,
          Invocation.method(
            #statFile,
            [path],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.SftpFileAttrs>.value(_FakeSftpFileAttrs_3(
          this,
          Invocation.method(
            #statFile,
            [path],
          ),
        )),
      ) as _i6.Future<_i2.SftpFileAttrs>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [RemoteDirectory].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDirectory extends _i1.Mock implements _i8.RemoteDirectory {
  @override
  _i4.Ssh get sshClient => (super.noSuchMethod(
        Invocation.getter(#sshClient),
        returnValue: _FakeSsh_4(
          this,
          Invocation.getter(#sshClient),
        ),
        returnValueForMissingStub: _FakeSsh_4(
          this,
          Invocation.getter(#sshClient),
        ),
      ) as _i4.Ssh);

  @override
  set sshClient(_i4.Ssh? _sshClient) => super.noSuchMethod(
        Invocation.setter(
          #sshClient,
          _sshClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  set path(String? _path) => super.noSuchMethod(
        Invocation.setter(
          #path,
          _path,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.SyncFileModel> get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: <_i7.SyncFileModel>[],
        returnValueForMissingStub: <_i7.SyncFileModel>[],
      ) as List<_i7.SyncFileModel>);

  @override
  set files(List<_i7.SyncFileModel>? _files) => super.noSuchMethod(
        Invocation.setter(
          #files,
          _files,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i9.SyncDirectoryModel> get directories => (super.noSuchMethod(
        Invocation.getter(#directories),
        returnValue: <_i9.SyncDirectoryModel>[],
        returnValueForMissingStub: <_i9.SyncDirectoryModel>[],
      ) as List<_i9.SyncDirectoryModel>);

  @override
  set directories(List<_i9.SyncDirectoryModel>? _directories) =>
      super.noSuchMethod(
        Invocation.setter(
          #directories,
          _directories,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get lastestFileTime => (super.noSuchMethod(
        Invocation.getter(#lastestFileTime),
        returnValue: _FakeDateTime_5(
          this,
          Invocation.getter(#lastestFileTime),
        ),
        returnValueForMissingStub: _FakeDateTime_5(
          this,
          Invocation.getter(#lastestFileTime),
        ),
      ) as DateTime);

  @override
  set lastestFileTime(DateTime? _lastestFileTime) => super.noSuchMethod(
        Invocation.setter(
          #lastestFileTime,
          _lastestFileTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> parseDirectory() => (super.noSuchMethod(
        Invocation.method(
          #parseDirectory,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [LocalDirectory].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDirectory extends _i1.Mock implements _i10.LocalDirectory {
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  set path(String? _path) => super.noSuchMethod(
        Invocation.setter(
          #path,
          _path,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.SyncFileModel> get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: <_i7.SyncFileModel>[],
        returnValueForMissingStub: <_i7.SyncFileModel>[],
      ) as List<_i7.SyncFileModel>);

  @override
  set files(List<_i7.SyncFileModel>? _files) => super.noSuchMethod(
        Invocation.setter(
          #files,
          _files,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i9.SyncDirectoryModel> get directories => (super.noSuchMethod(
        Invocation.getter(#directories),
        returnValue: <_i9.SyncDirectoryModel>[],
        returnValueForMissingStub: <_i9.SyncDirectoryModel>[],
      ) as List<_i9.SyncDirectoryModel>);

  @override
  set directories(List<_i9.SyncDirectoryModel>? _directories) =>
      super.noSuchMethod(
        Invocation.setter(
          #directories,
          _directories,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get lastestFileTime => (super.noSuchMethod(
        Invocation.getter(#lastestFileTime),
        returnValue: _FakeDateTime_5(
          this,
          Invocation.getter(#lastestFileTime),
        ),
        returnValueForMissingStub: _FakeDateTime_5(
          this,
          Invocation.getter(#lastestFileTime),
        ),
      ) as DateTime);

  @override
  set lastestFileTime(DateTime? _lastestFileTime) => super.noSuchMethod(
        Invocation.setter(
          #lastestFileTime,
          _lastestFileTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> parseDirectory() => (super.noSuchMethod(
        Invocation.method(
          #parseDirectory,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
